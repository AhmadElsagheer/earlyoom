.\" Automatically generated by Pandoc 2.0.6
.\"
.TH "earlyoom" "1" "line3" "" ""
.hy
.SH NAME
.PP
earlyoom \- Early OOM Daemon
.SH SYNOPSIS
.PP
\f[B]earlyoom\f[] [\f[B]OPTION\f[]]\&...
.SH DESCRIPTION
.PP
The oom\-killer generally has a bad reputation among Linux users.
One may have to sit in front of an unresponsive system, listening to the
grinding disk for minutes, and press the reset button to quickly get
back to what one was doing after running out of patience.
.PP
\f[B]earlyoom\f[] checks the amount of available memory and free swap 10
times a second.
If both are below 10%, it will kill the largest process.
The percentage value is configurable via command line arguments.
.SH OPTIONS
.SS \-m PERCENT
.PP
set available memory minimum to PERCENT of total (default 10 %)
.SS \-s PERCENT
.PP
set free swap minimum to PERCENT of total (default 10 %)
.SS \-M SIZE
.PP
set available memory minimum to SIZE KiB
.SS \-S SIZE
.PP
set free swap minimum to SIZE KiB
.SS \-k
.PP
use kernel oom killer instead of own user\-space implementation
.SS \-i
.PP
user\-space oom killer should ignore positive oom_score_adj values
.SS \-d
.PP
enable debugging messages
.SS \-v
.PP
print version information and exit
.SS \-r INTERVAL
.PP
memory report interval in seconds (default 1), set to 0 to disable
completely
.SS \-p
.PP
set niceness of earlyoom to \-20 and oom_score_adj to \-1000
.SS \[en]prefer REGEX
.PP
prefer killing processes matching REGEX (adds 300 to oom_score)
.SS \[en]avoid REGEX
.PP
avoid killing processes matching REGEX (subtracts 300 from oom_score)
.SS \-h, \[en]help
.PP
this help text
.SH EXIT STATUS
.PP
0: Successful program execution.
.PP
1: Usage printed (using \-h).
.PP
2: Switch conflict.
.PP
4: Could not cd to /proc
.PP
5: Could not open proc
.PP
7: Could not open /proc/sysrq\-trigger
.PP
13: Unknown options.
.PP
14: Wrong parameters for other options.
.PP
15: Wrong parameters for memory threshold.
.PP
16: Wrong parameters for swap threshold.
.PP
102: Could not open /proc/meminfo
.PP
103: Could not read /proc/meminfo
.PP
104: Could not find a specific entry in /proc/meminfo
.PP
105: Could not convert number when parse the contents of /proc/meminfo
.SH Why not trigger the kernel oom killer?
.PP
Earlyoom does not use \f[C]echo\ f\ >\ /proc/sysrq\-trigger\f[] because
the Chrome people made their browser always be the first (innocent!)
victim by setting \f[C]oom_score_adj\f[] very high.
Instead, earlyoom finds out itself by reading through
\f[C]/proc/*/status\f[] (actually \f[C]/proc/*/statm\f[], which contains
the same information but is easier to parse programmatically).
.PP
Additionally, in recent kernels (tested on 4.0.5), triggering the kernel
oom killer manually may not work at all.
That is, it may only free some graphics memory (that will be allocated
immediately again) and not actu‐ ally kill any process.
.SH MEMORY USAGE
.PP
About 2 MiB VmRSS.
All memory is locked using mlockall() to make sure earlyoom does not
slow down in low memory situations.
.SH AUTHOR
.PP
The author of earlyoom is Jakob Unterwurzacher ⟨jakobunt\@gmail.com⟩.
.PP
This manual page was written by Yangfl ⟨mmyangfl\@gmail.com⟩, for the
Debian project (and may be used by others).
.SH AUTHORS
line2.
